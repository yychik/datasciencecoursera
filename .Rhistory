data2[1,]
View(act_train)
source('~/run_analysis.R')
##Load in the file and merge into one dataset
testset <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/X_test.txt")
trainset <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/X_train.txt")
##Get Activities and label them
act_train <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/y_train.txt")
act_test <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/y_test.txt")
trainset <- merge(trainset, act_train)
testset <- merge(testset, act_test)
?merge
trainset <- merge(trainset, act_train, by.x=TRUE)
testset <- merge(testset, act_test, by.x=TRUE)
trainset <- merge(trainset, act_train, by.y=TRUE)
testset <- merge(testset, act_test, by.y=TRUE)
trainset <- merge(trainset, act_train, by.y=TRUE)
##Load in the file and merge into one dataset
testset <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/X_test.txt")
trainset <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/X_train.txt")
##Get Activities and label them
act_train <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/y_train.txt")
act_test <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/y_test.txt")
trainset <- merge(trainset, act_train, by.y=TRUE)
testset <- merge(testset, act_test, by.y=TRUE)
##Load in the file and merge into one dataset
testset <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/X_test.txt")
trainset <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/X_train.txt")
##Get Activities and label them
act_train <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/y_train.txt")
act_test <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/y_test.txt")
trainset <- merge(trainset, act_train, all=TRUE)
testset <- merge(testset, act_test, all=TRUE)
View(testset)
View(testset)
##Load in the file and merge into one dataset
testset <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/X_test.txt")
trainset <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/X_train.txt")
##Get Activities and label them
act_train <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/y_train.txt")
act_test <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/y_test.txt")
testset <- cbind(testset, act_test) #Merge activity and test X
trainset <- cbind(trainset, act_train) #Merge activity and training X
data <- rbind(testset,trainset) #Merge to form one big dataset
heads(data)
head(data)
?read.table
act_train <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/y_train.txt", col.names="Activity")
act_test <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/y_test.txt",col.names="Activity")
View(act_train)
testset <- cbind(testset, act_test) #Merge activity and test X
trainset <- cbind(trainset, act_train) #Merge activity and training X
data <- rbind(testset,trainset) #Merge to form one big dataset
##Load in the file and merge into one dataset
testset <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/X_test.txt")
trainset <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/X_train.txt")
##Get Activities and label them
act_train <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/y_train.txt", col.names="Activity")
act_test <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/y_test.txt",col.names="Activity")
testset <- cbind(testset, act_test) #Merge activity and test X
trainset <- cbind(trainset, act_train) #Merge activity and training X
data <- rbind(testset,trainset) #Merge to form one big dataset
head(data)
features <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/features.txt")
mean_idx <- features$V1[grepl("mean()",features$V2)] ##Get column index for mean observations
std_idx <- features$V1[grepl("std()",features$V2)] ##Get column index for std observations
data[data$Activity == 1] <- "Walking"
data[data$Activity == 2] <- "Walking Upstairs"
data[data$Activity == 3] <- "Walking Downstairs"
data[data$Activity == 4] <- "Sitting"
data[data$Activity == 5] <- "Standing"
data[data$Activity == 6] <- "Laying"
data[data$Activity == 1]
head(data)
data$Activity
data[data$Activity==1]
data[,data$Activity==1]
data[,Activity==1]
data[,data$Activity=1]
data[,data$Activity==1]
data[ ,data$Activity == 1]
data[data$Activity == 1]
data$Activity == 1
data[data$Activity == 1]
data$Activity[data$Activity == 1]
data$Activity[data$Activity == 1] <- "Walking"
data$Activity[data$Activity == 2] <- "Walking Upstairs"
data$Activity[data$Activity == 3] <- "Walking Downstairs"
data$Activity[data$Activity == 4] <- "Sitting"
data$Activity[data$Activity == 5] <- "Standing"
data$Activity[data$Activity == 6] <- "Laying"
head(data)
data3$Activity[data3$Activity == 6] <- "Laying"
source('~/run_analysis.R')
head(data3)
head(data3)
View(features)
new_features <- features[c(mean_idx,std_idx)]
new_features <- features[,c(mean_idx,std_idx)]
new_features <- features[][c(mean_idx,std_idx)]
features <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/features.txt", col.names = c("Number","Name"))
mean_idx <- features$Number[grepl("mean()",features$Name)] ##Get column index for mean observations
std_idx <- features$Number[grepl("std()",features$Name)] ##Get column index for std observations
new_features <- features$Name[c(mean_idx,std_idx)]
View(features)
view(new_features)
view(new_features)
view
view(data)
View(new_features)
data[[1]
]
features
features[mean_idx]
features[mean_idx,]
new_features <- features[c(mean_idx,std_idx),]
View(new_features)
View(new_features)
split(new_features$Name[1])
split(new_features$Name[1],"-")
strsplit(new_features$Name[1],"-")
new_features[1]
new_features$Name[1]
strsplit(new_features$Name[1],"-")
strsplit(new_features$Name[1],"[-]")
unlist(strsplit(new_features$Name[1],"[-]"))
strsplit(new_features$Name[1])
class(new_features$Name[1])
class(new_features$Name[1]) <- "char"
?read.table
act_Test
act_test
data3$Activity[1]
class(data3$Activity[1])
View(features)
features <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/features.txt", col.names = c("Number","Name"), colClasses=c("integer","character"))
View(features)
class(new_features$Name[1])
features <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/features.txt", col.names = c("Number","Name"), colClasses=c("integer","character"))
features$Name
class(features$Name)
strsplit(features$Name[1],"-")
strsplit(new_features$Name[1],"-")
new_features <- features[c(mean_idx,std_idx),]
new_features <- features[c(mean_idx,std_idx),]
strsplit(new_features$Name[1],"-")
strsplit(new_features$Name[2],"-")
strsplit(new_features$Name[5],"-")
strsplit(new_features$Name[10],"-")
##Load in the file and merge into one dataset
source('C:/Users/User/coursera-repo/run_analysis.R')
teststr <- new_features[1]
teststr
teststr <- new_features$Name[1]
teststr
splitstr <- splitstr(teststr,"-")
split <- strsplit(teststr, "-")
split
split[1]
split[[1]
]
split[[1]]
split[[1]][1]
splitstr(new_features$Name,"-")
strsplit(new_features$Name,"-")
table(c("tBodyAcc", "Body Acceleration Signal in time domain"), c("tGravityAcc", "Gravity Acceleration signal in time domain"))
a<-data.frame(c("tBodyAcc", "Body Acceleration Signal in time domain"), c("tGravityAcc", "Gravity Acceleration signal in time domain"))
a
new_feature
new_features
View(new_features)
View(new_features)
fullname <- data.frame(c("Body Acceleration Signal in time", "Gravity Acceleration signal in time", "Body Acceleration Jerk Signal in time", "Body Gyroscope signal in time", "Body Gyroscope jerk signal in time", "Body Acceleration signal magnitude in time", "Gravity Acceleration signal magnitude in time", "Body Accerlation Jerk signal magnitude in time", "Body Gyroscope signal magnitude in time", "Body Gyroscope jerk signal in time", "Body Acceration signal in frequency" ,"Body Acceleration Jerk signal in frequency", "Body Gyroscope signal in frequency", "Body Acceleration signal magnitude in frequency", "Body Body Acceleration Jerk signal in frequency", "Body Body Gyroscope signal in magnitude", "Body Body Gyroscope jerk signal in magnitude")
)
View(fullname)
fullname <- data.frame(c("Body Acceleration Signal in time", "Gravity Acceleration signal in time", "Body Acceleration Jerk Signal in time", "Body Gyroscope signal in time", "Body Gyroscope jerk signal in time", "Body Acceleration signal magnitude in time", "Gravity Acceleration signal magnitude in time", "Body Accerlation Jerk signal magnitude in time", "Body Gyroscope signal magnitude in time", "Body Gyroscope jerk signal in time", "Body Acceration signal in frequency" ,"Body Acceleration Jerk signal in frequency", "Body Gyroscope signal in frequency", "Body Acceleration signal magnitude in frequency", "Body Body Acceleration Jerk signal in frequency", "Body Body Gyroscope signal in magnitude", "Body Body Gyroscope jerk signal in magnitude"), col.names=c("Full Name"))
View(fullname)
fullname <- data.frame(Full Name = c("Body Acceleration Signal in time", "Gravity Acceleration signal in time", "Body Acceleration Jerk Signal in time", "Body Gyroscope signal in time", "Body Gyroscope jerk signal in time", "Body Acceleration signal magnitude in time", "Gravity Acceleration signal magnitude in time", "Body Accerlation Jerk signal magnitude in time", "Body Gyroscope signal magnitude in time", "Body Gyroscope jerk signal in time", "Body Acceration signal in frequency" ,"Body Acceleration Jerk signal in frequency", "Body Gyroscope signal in frequency", "Body Acceleration signal magnitude in frequency", "Body Body Acceleration Jerk signal in frequency", "Body Body Gyroscope signal in magnitude", "Body Body Gyroscope jerk signal in magnitude"))
fullname <- data.frame("Full Name" = c("Body Acceleration Signal in time", "Gravity Acceleration signal in time", "Body Acceleration Jerk Signal in time", "Body Gyroscope signal in time", "Body Gyroscope jerk signal in time", "Body Acceleration signal magnitude in time", "Gravity Acceleration signal magnitude in time", "Body Accerlation Jerk signal magnitude in time", "Body Gyroscope signal magnitude in time", "Body Gyroscope jerk signal in time", "Body Acceration signal in frequency" ,"Body Acceleration Jerk signal in frequency", "Body Gyroscope signal in frequency", "Body Acceleration signal magnitude in frequency", "Body Body Acceleration Jerk signal in frequency", "Body Body Gyroscope signal in magnitude", "Body Body Gyroscope jerk signal in magnitude"))
View(fullname)
fullname <- data.frame("FullName" = c("Body Acceleration Signal in time", "Gravity Acceleration signal in time", "Body Acceleration Jerk Signal in time", "Body Gyroscope signal in time", "Body Gyroscope jerk signal in time", "Body Acceleration signal magnitude in time", "Gravity Acceleration signal magnitude in time", "Body Accerlation Jerk signal magnitude in time", "Body Gyroscope signal magnitude in time", "Body Gyroscope jerk signal in time", "Body Acceration signal in frequency" ,"Body Acceleration Jerk signal in frequency", "Body Gyroscope signal in frequency", "Body Acceleration signal magnitude in frequency", "Body Body Acceleration Jerk signal in frequency", "Body Body Gyroscope signal in magnitude", "Body Body Gyroscope jerk signal in magnitude"))
statname <- data.frame("FullName" = c("mean", "standard deviation", "weight average frequency"))
direction <- data.frame("FullName" = c("X direction","Y direction","Z direction"))
length
length(new_features$Names)
length(new_features$Name)
split <- strsplit(teststr, "-")
splitstr <- strsplit(new_features$Name)
splitstr <- strsplit(new_features$Name, "-")
View(trainset)
View(data3)
splitstr[1]
length(splitstr[1])
length(splitstr[[1])
length(splitstr[[1]])
splitstr[1][1]
splitstr[[1][1]
splitstr[[1]]
splitstr[[1]][1]
fullname[splitstr[[1]][1]]
fullname$FullName==splitstr[[1]][1]]
fullname$FullName==splitstr[[1]][1]
unique(splitstr)
unique(splitstr[[]])
unique(splitstr[[]][1])
unique(splitstr[[1]][1])
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction","Y direction","Z direction"))
View(direction)
statname <- data.frame("OriginalName" = c("mean()","std()", "meanFreq()"), "FullName" = c("mean", "standard deviation", "weight average frequency")) ##stat full name
View(fullname)
t <- c("tBodyAcc","tGravityAcc","tBodyAccJerk", "tBodyGyro", "tBodyGyroJerk", "tBodyAccMag", "tGravityAccMag", "tBodyAccJerkMag", "tBodyGyroMag", "tBodyGyroJerkMag", "fBodyAcc", "fBodyAccJerk", "fBodyGyro", "fBodyAccMag", "fBodyAccJerkMag", "fBodyGyroMag", "fBodyGyroJerkMag")
t <- data.frame(c("tBodyAcc","tGravityAcc","tBodyAccJerk", "tBodyGyro", "tBodyGyroJerk", "tBodyAccMag", "tGravityAccMag", "tBodyAccJerkMag", "tBodyGyroMag", "tBodyGyroJerkMag", "fBodyAcc", "fBodyAccJerk", "fBodyGyro", "fBodyAccMag", "fBodyAccJerkMag", "fBodyGyroMag", "fBodyGyroJerkMag"))
View(t)
fullname <- data.frame("OriginalName" = c("tBodyAcc","tGravityAcc","tBodyAccJerk", "tBodyGyro", "tBodyGyroJerk", "tBodyAccMag", "tGravityAccMag", "tBodyAccJerkMag", "tBodyGyroMag", "tBodyGyroJerkMag", "fBodyAcc", "fBodyAccJerk", "fBodyGyro", "fBodyAccMag", "fBodyAccJerkMag", "fBodyGyroMag", "fBodyGyroJerkMag"),   "FullName" = c("Body Acceleration Signal in time", "Gravity Acceleration signal in time", "Body Acceleration Jerk Signal in time", "Body Gyroscope signal in time", "Body Gyroscope jerk signal in time", "Body Acceleration signal magnitude in time", "Gravity Acceleration signal magnitude in time", "Body Accerlation Jerk signal magnitude in time", "Body Gyroscope signal magnitude in time", "Body Gyroscope jerk signal in time", "Body Acceration signal in frequency" ,"Body Acceleration Jerk signal in frequency", "Body Gyroscope signal in frequency", "Body Acceleration signal magnitude in frequency", "Body Acceleration Jerk signal magnitude in frequency", "Body Gyroscope signal magnitude in frequency", "Body Gyroscope jerk signal magnitude in frequency")) ##Define Full name mapping table
statname <- data.frame("OriginalName" = c("mean()","std()", "meanFreq()"), "FullName" = c("mean", "standard deviation", "weight average frequency")) ##stat full name
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction","Y direction","Z direction"))
View(fullname)
View(new_features)
View(features)
View(new_features)
fullname <- data.frame("OriginalName" = c("tBodyAcc","tGravityAcc","tBodyAccJerk", "tBodyGyro", "tBodyGyroJerk", "tBodyAccMag", "tGravityAccMag", "tBodyAccJerkMag", "tBodyGyroMag", "tBodyGyroJerkMag", "fBodyAcc", "fBodyAccJerk", "fBodyGyro", "fBodyAccMag", "fBodyAccJerkMag", "fBodyGyroMag", "fBodyGyroJerkMag","fBodyBodyAccJerkMag", "fBodyBodyGyroMag", "fBodyBodyGyroJerkMag"),   "FullName" = c("Body Acceleration Signal in time", "Gravity Acceleration signal in time", "Body Acceleration Jerk Signal in time", "Body Gyroscope signal in time", "Body Gyroscope jerk signal in time", "Body Acceleration signal magnitude in time", "Gravity Acceleration signal magnitude in time", "Body Accerlation Jerk signal magnitude in time", "Body Gyroscope signal magnitude in time", "Body Gyroscope jerk signal in time", "Body Acceration signal in frequency" ,"Body Acceleration Jerk signal in frequency", "Body Gyroscope signal in frequency", "Body Acceleration signal magnitude in frequency", "Body Acceleration Jerk signal magnitude in frequency", "Body Gyroscope signal magnitude in frequency", "Body Gyroscope jerk signal magnitude in frequency", "Body Body Acceleration jerk signal magnitude in frequency", "Body Body gyroscope signal magnitude in frequency", "Body Body gyroscope jerk signal in magnitude")) ##Define Full name mapping table
statname <- data.frame("OriginalName" = c("mean()","std()", "meanFreq()"), "FullName" = c("mean", "standard deviation", "weight average frequency")) ##stat full name
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction","Y direction","Z direction"))
View(fullname)
splitstr[[1]]
splitstr[[1]][1]
fullname$OriginalName==splitstr[[1]][1]
fullname$FullName(fullname$OriginalName==splitstr[[1]][1])
fullname$FullName[fullname$OriginalName==splitstr[[1]][1]]
class(fullname$FullName[fullname$OriginalName==splitstr[[1]][1]])
class(fullname)
class(fullname$Name)
class(fullname$FullName)
fullname <- data.frame("OriginalName" = c("tBodyAcc","tGravityAcc","tBodyAccJerk", "tBodyGyro", "tBodyGyroJerk", "tBodyAccMag", "tGravityAccMag", "tBodyAccJerkMag", "tBodyGyroMag", "tBodyGyroJerkMag", "fBodyAcc", "fBodyAccJerk", "fBodyGyro", "fBodyAccMag", "fBodyAccJerkMag", "fBodyGyroMag", "fBodyGyroJerkMag","fBodyBodyAccJerkMag", "fBodyBodyGyroMag", "fBodyBodyGyroJerkMag"),   "FullName" = c("Body Acceleration Signal in time", "Gravity Acceleration signal in time", "Body Acceleration Jerk Signal in time", "Body Gyroscope signal in time", "Body Gyroscope jerk signal in time", "Body Acceleration signal magnitude in time", "Gravity Acceleration signal magnitude in time", "Body Accerlation Jerk signal magnitude in time", "Body Gyroscope signal magnitude in time", "Body Gyroscope jerk signal in time", "Body Acceration signal in frequency" ,"Body Acceleration Jerk signal in frequency", "Body Gyroscope signal in frequency", "Body Acceleration signal magnitude in frequency", "Body Acceleration Jerk signal magnitude in frequency", "Body Gyroscope signal magnitude in frequency", "Body Gyroscope jerk signal magnitude in frequency", "Body Body Acceleration jerk signal magnitude in frequency", "Body Body gyroscope signal magnitude in frequency", "Body Body gyroscope jerk signal in magnitude"), colClasses=c("character", "character")) ##Define Full name mapping table
statname <- data.frame("OriginalName" = c("mean()","std()", "meanFreq()"), "FullName" = c("mean", "standard deviation", "weight average frequency"), colClasses=c("character", "character")) ##stat full name
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction","Y direction","Z direction"), colClasses=c("character", "character"))
##Load in the file and merge into one dataset
testset <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/X_test.txt")
trainset <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/X_train.txt")
data <- rbind(testset,trainset) #Merge to form one big dataset
##Load the feature labels
features <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/features.txt", col.names = c("Number","Name"), colClasses=c("integer","character"))
mean_idx <- features$Number[grepl("mean()",features$Name)] ##Get column index for mean observations
std_idx <- features$Number[grepl("std()",features$Name)] ##Get column index for std observations
data2 <- data[,c(mean_idx,std_idx)]
##Get Activities and label them
act_train <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/train/y_train.txt", col.names="Activity")
act_test <- read.table("C:/Users/User/Desktop/UCI HAR Dataset/test/y_test.txt",col.names="Activity")
data3 <- cbind(data2,rbind(act_test, act_train)) ##Merge Activity column with the processed data2
##Label the activity names
data3$Activity[data3$Activity == 1] <- "Walking"
data3$Activity[data3$Activity == 2] <- "Walking Upstairs"
data3$Activity[data3$Activity == 3] <- "Walking Downstairs"
data3$Activity[data3$Activity == 4] <- "Sitting"
data3$Activity[data3$Activity == 5] <- "Standing"
data3$Activity[data3$Activity == 6] <- "Laying"
fullname <- data.frame("OriginalName" = c("tBodyAcc","tGravityAcc","tBodyAccJerk", "tBodyGyro", "tBodyGyroJerk", "tBodyAccMag", "tGravityAccMag", "tBodyAccJerkMag", "tBodyGyroMag", "tBodyGyroJerkMag", "fBodyAcc", "fBodyAccJerk", "fBodyGyro", "fBodyAccMag", "fBodyAccJerkMag", "fBodyGyroMag", "fBodyGyroJerkMag","fBodyBodyAccJerkMag", "fBodyBodyGyroMag", "fBodyBodyGyroJerkMag"),   "FullName" = c("Body Acceleration Signal in time", "Gravity Acceleration signal in time", "Body Acceleration Jerk Signal in time", "Body Gyroscope signal in time", "Body Gyroscope jerk signal in time", "Body Acceleration signal magnitude in time", "Gravity Acceleration signal magnitude in time", "Body Accerlation Jerk signal magnitude in time", "Body Gyroscope signal magnitude in time", "Body Gyroscope jerk signal in time", "Body Acceration signal in frequency" ,"Body Acceleration Jerk signal in frequency", "Body Gyroscope signal in frequency", "Body Acceleration signal magnitude in frequency", "Body Acceleration Jerk signal magnitude in frequency", "Body Gyroscope signal magnitude in frequency", "Body Gyroscope jerk signal magnitude in frequency", "Body Body Acceleration jerk signal magnitude in frequency", "Body Body gyroscope signal magnitude in frequency", "Body Body gyroscope jerk signal in magnitude"), colClasses=c("character", "character")) ##Define Full name mapping table
statname <- data.frame("OriginalName" = c("mean()","std()", "meanFreq()"), "FullName" = c("mean", "standard deviation", "weight average frequency"), colClasses=c("character", "character")) ##stat full name
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction","Y direction","Z direction"), colClasses=c("character", "character"))
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction", "Y direction", "Z direction"))
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction", "Y direction", "Z direction"), colClasses=c("character", "character"))
View(direction)
class(direction$FullName)
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction", "Y direction", "Z direction"), colClasses=c("character"))
class(direction$FullName)
class(direction$Original Name)
class(direction$OriginalName)
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction", "Y direction", "Z direction"), colClasses=c("character","character"))
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction", "Y direction", "Z direction"), colClasses=c("OrginalName" ="character","FullName"="character"))
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction", "Y direction", "Z direction"), colClasses=c("OrginalName" ="character","FullName"="character"))
statname <- data.frame("OriginalName" = c("mean()","std()", "meanFreq()"), "FullName" = c("mean", "standard deviation", "weight average frequency")) ##stat full name
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction", "Y direction", "Z direction"))
class(fullname$FullName[fullname$OriginalName==splitstr[[1]][1]])
splitstr <- strsplit(new_features$Name, "-")
new_features <- features[c(mean_idx,std_idx),]
splitstr <- strsplit(new_features$Name, "-")
class(fullname$FullName[fullname$OriginalName==splitstr[[1]][1]])
source('~/.active-rstudio-document')
class(fullname$FullName[fullname$OriginalName==splitstr[[1]][1]])
new_features <- features[c(mean_idx,std_idx),]
splitstr <- strsplit(new_features$Name, "-")
class(fullname$FullName[fullname$OriginalName==splitstr[[1]][1]])
class(fullname)
fullname$FullName[fullname$OriginalName==splitstr[[1]][1]]
str <- fullname$FullName[fullname$OriginalName==splitstr[[1]][1]]
str
str <- as.character(fullname$FullName[fullname$OriginalName==splitstr[[1]][1]])
str
fullname <- data.frame("OriginalName" = c("tBodyAcc","tGravityAcc","tBodyAccJerk", "tBodyGyro", "tBodyGyroJerk", "tBodyAccMag", "tGravityAccMag", "tBodyAccJerkMag", "tBodyGyroMag", "tBodyGyroJerkMag", "fBodyAcc", "fBodyAccJerk", "fBodyGyro", "fBodyAccMag", "fBodyAccJerkMag", "fBodyGyroMag", "fBodyGyroJerkMag","fBodyBodyAccJerkMag", "fBodyBodyGyroMag", "fBodyBodyGyroJerkMag"),   "FullName" = c("Body Acceleration Signal in time", "Gravity Acceleration signal in time", "Body Acceleration Jerk Signal in time", "Body Gyroscope signal in time", "Body Gyroscope jerk signal in time", "Body Acceleration signal magnitude in time", "Gravity Acceleration signal magnitude in time", "Body Accerlation Jerk signal magnitude in time", "Body Gyroscope signal magnitude in time", "Body Gyroscope jerk signal in time", "Body Acceration signal in frequency" ,"Body Acceleration Jerk signal in frequency", "Body Gyroscope signal in frequency", "Body Acceleration signal magnitude in frequency", "Body Acceleration Jerk signal magnitude in frequency", "Body Gyroscope signal magnitude in frequency", "Body Gyroscope jerk signal magnitude in frequency", "Body Body Acceleration jerk signal magnitude in frequency", "Body Body gyroscope signal magnitude in frequency", "Body Body gyroscope jerk signal in magnitude")) ##Define Full name mapping table
statname <- data.frame("OriginalName" = c("mean()","std()", "meanFreq()"), "FullName" = c("mean", "standard deviation", "weight average frequency")) ##stat full name
direction <- data.frame("OriginalName" = c("X","Y", "Z"), "FullName" = c("X direction", "Y direction", "Z direction"))
View(statname)
strsplit
splitstr
splitstr[[79]]
splitstr[[79]][3]
splitstr[[79]][3] == NA
is.na(splitstr[[79]][3])
is.na(splitstr[[75]][3])
i <- 1
vName <- as.character(fullname$FullName[fullname$OriginalName==splitstr[[i]][1]])
sName <- as.character(statname$FullName[statname$OriginalName==splitstr[[i]][2]])
vname
vName
c(vName,sName)
strcat(vName,sName)
paste(vName,sName)
paste(sName, "of", vName)
#Fill the full names
splitstr <- strsplit(new_features$Name, "-")
for i in 1:length(new_features$Name)
{
vName <- as.character(fullname$FullName[fullname$OriginalName==splitstr[[i]][1]])
sName <- as.character(statname$FullName[statname$OriginalName==splitstr[[i]][2]])
new_features$FullName[i] <- paste(sName, "of", vName)
if(is.na(splitstr[[i]][3] == FALSE))
{
dName <- as.character(statname$FullName[direction$OriginalName==splitstr[[i]][2]])
new_features$FullName[i] <- paste(new_features$FullName[i], "in", dname)
}
}
View(new_features)
View(statname)
splitstr[[10]][1]
splitstr[[10]][2]
i <- 10
as.character(statname$FullName[statname$OriginalName==splitstr[[i]][2]])
as.character(fullname$FullName[fullname$OriginalName==splitstr[[i]][1]])
source('~/.active-rstudio-document')
source('C:/Users/User/coursera-repo/run_analysis.R')
source('C:/Users/User/coursera-repo/run_analysis.R')
View(new_features)
source('C:/Users/User/coursera-repo/run_analysis.R')
source('C:/Users/User/coursera-repo/run_analysis.R')
View(new_features)
is.na(splitstr[[1]][3])
for (i in 1:length(new_features$Name))
{
vName <- as.character(fullname$FullName[fullname$OriginalName==splitstr[[i]][1]])
sName <- as.character(statname$FullName[statname$OriginalName==splitstr[[i]][2]])
new_features$FullName[i] <- paste(sName, "of", vName)
if(is.na(splitstr[[i]][3]) == FALSE)
{
dName <- as.character(direction$FullName[direction$OriginalName==splitstr[[i]][2]])
new_features$FullName[i] <- paste(new_features$FullName[i], "in", dName)
}
}
View(new_features)
new_features$FullName[21]
dName <- as.character(direction$FullName[direction$OriginalName==splitstr[[i]][2]])
dName
source('C:/Users/User/coursera-repo/run_analysis.R')
View(new_features)
View(data3)
names(data3)
names(data3) <- c(new_features$FullName,"Activity")
View(data3)
View(data3)
data4<-data.table(data3)
library(data.table)
data4<-data.table(data3)
data4[1]
data4
data4[,1]
data4
##Load in the file and merge into one dataset
testset <- read.table("~/UCI HAR Dataset/test/X_test.txt")
trainset <- read.table("~/UCI HAR Dataset/train/X_train.txt")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydy)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?manip
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(5:20))
select(cran,-(x:20))
select(cran,-(X:size))
filter(cran, package =="swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- selec(cran, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran2
cran3
mutate(cran2, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_gb = size_mb / 2^10)
cran3
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
group_by(cran,package)
by_package <- group_by(cran,package)
by_package
summarize(by_package,size)
summarize(size)
summarize(by_package)
summarize(by_package, mean(size))
submit()
tbl
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
filter(pack_sum, unique > 465)
top_quintile <- filter(pack_sum, unique > 465)
top_unqie <- filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
?chain
submit
submit()
submit()
submit()
submit()
submit()
?dplyr
source('C:/Users/User/coursera-repo/run_analysis.R')
data4 <- tbl_df(data3)
activity_dataset <- group_by(data4, Activity)
View(data4)
data4
data3
View(data3)
View(data3)
names(data3)
View(features)
View(fullname)
View(new_features)
names(data3) <- c(new_features,"Activity")
names(data3)
names(data3) <- c(new_features$FullName,"Activity")
names(data3)
library(dplyr)
data4 <- tbl_df(data3)
activity_dataset <- group_by(data4, Activity)
source('C:/Users/User/coursera-repo/run_analysis.R')
source('C:/Users/User/coursera-repo/run_analysis.R')
source('~/.active-rstudio-document')
source('C:/Users/User/coursera-repo/run_analysis.R')
?cbind
source('C:/Users/User/coursera-repo/run_analysis.R')
data4
summarize(activity_dataset, count = n())
activity_dataset <- group_by(data4, Activity, Subject)
summarize(activity_dataset, count = n())
clean_dataset <- group_by(data4, Activity, Subject)
summarize(clean_dataset, mean=mean(data4[1:79]))
dim(data4
)
data4[1:79]
clean_dataset %>% group_by(Activity, Subject) %>% summarize_each(funs(mean)
)
clean_dataset %>% group_by(Activity, Subject) %>% summarise_each(funs(mean))
clean_dataset <- tbl_df(data3)
clean_dataset %>% group_by(Activity, Subject) %>% summarise_each(funs(mean))
?summarise_each
library(iris)
?iris
iris
by_species <- iris %>% group_by(Species)
by_species %>% summarise_each(funs(mean))
clean_dataset <- tbl_df(data3) %>% group_by(Activity)
clean_dataset %>% summarise_each(funs(mean))
clean_dataset <- tbl_df(data3) %>% group_by(Activity, Subject)
clean_dataset <- clean_dataset %>% summarise_each(funs(mean))
View(clean_dataset)
setwd("C:/Users/User/coursera-repo")
?write.table
write.table(clean_dataset, file="step5.txt", row.name=FALSE)
write.table(clean_dataset, file="step5.txt", row.names=FALSE)
